spring.social.facebook.appId=2084685301812311

spring.social.facebook.appSecret=d875a77ea2cdc94374aaec3256a0ef01
#spring.social.auto_connection_views=false




#spring.datasource.url=jdbc:sqlserver://localhost;databaseName=facebook
#spring.datasource.username=mhm
#spring.datasource.password=123456
#spring.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
#spring.jpa.show-sql=true
#
#spring.jpa.hibernate.ddl-auto = update
#

spring.datasource.url = jdbc:mysql://localhost:3306/facebook?useSSL=false

# Username and password
spring.datasource.username = root
#spring.datasource.password = 

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect



server.port: 8443

server.ssl.enabled: true
server.ssl.key-alias: tomcat-localhost
server.ssl.key-password: changeit
server.ssl.key-store: classpath:keystore.jks
server.ssl.key-store-provider: SUN
server.ssl.key-store-type: JKS
server.ssl.key-store-password: changeit